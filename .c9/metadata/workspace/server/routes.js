{"changed":true,"filter":false,"title":"routes.js","tooltip":"/server/routes.js","value":"var _ = require('underscore');\nvar path = require('path');\nvar taskModel = require('./models/task');\nvar userModel = require('./models/user');\nvar groupModel = require('./models/group');\nvar passport = require('passport');\n\nvar routes = [\n  // Views\n  {\n    path: '/partials/*',\n    httpMethod: 'GET',\n    middleware: [function (req, res) {\n      var requestedView = path.join('./', req.url);\n      res.sendfile('./client/views/' + requestedView);\n      //res.render(requestedView);\n    }]\n  },\n  {\n    path: '/api/groups',\n    httpMethod: 'GET',\n    middleware: [getgroups]\n  },\n  {\n    path: '/api/groups/:group_id',\n    httpMethod: 'GET',\n    middleware: [getgroup]\n  },\n  {\n    path: '/api/groups/:group_id',\n    httpMethod: 'PUT',\n    middleware: [savegroup]\n  },\n  {\n    path: '/api/groups/:group_id',\n    httpMethod: 'DELETE',\n    middleware: [deletegroup]\n  },\n  {\n    path: '/api/tasks',\n    httpMethod: 'GET',\n    middleware: [gettasks]\n  },\n  {\n    path: '/api/tasks/:task_id',\n    httpMethod: 'GET',\n    middleware: [gettask]\n  },\n  {\n    path: '/api/tasks/:task_id',\n    httpMethod: 'PUT',\n    middleware: [savetask]\n  },\n\t{\n    path: '/api/tasks/:task_id',\n    httpMethod: 'DELETE',\n    middleware: [deletetask]\n  },\n  {\n    path: '/api/users/:user_id',\n    httpMethod: 'GET',\n    middleware: [getuser]\n  },\n  {\n    path: '/api/userlist',\n    httpMethod: 'GET',\n    middleware: [userlist]\n  },\n  {\n    path: '/api/logged',\n    httpMethod: 'GET',\n    middleware: [getLoggedUser]\n  },  \n  {\n    path: '/api/login',\n    httpMethod: 'POST',\n    middleware: [login]\n  },\n  {\n    path: '/api/logout',\n    httpMethod: 'PUT',\n    middleware: [logout]\n  },\n  {\n    path: '/api/register',\n    httpMethod: 'POST',\n    middleware: [register]\n  },\n  {\n    path: '/*',\n    httpMethod: 'GET',\n    middleware: [function(req, res) {\n      res.redirect('/');\n    }]\n  }\n];\n\nmodule.exports = function(app) {\n  _.each(routes, function(route) {\n    //route.middleware.unshift(ensureAuthorized); //Поместили в стек\n    var args = _.flatten([route.path, route.middleware]); //Разложение вложенного массива на элементарный ряд\n\n    switch(route.httpMethod.toUpperCase()) {\n      case 'GET':\n        app.get.apply(app, args); //вызов функции в контексте app\n        break;\n      case 'POST':\n        app.post.apply(app, args);\n        break;\n      case 'PUT':\n        app.put.apply(app, args);\n        break;\n      case 'DELETE':\n        app.delete.apply(app, args);\n        break;\n      default:\n        throw new Error('Invalid HTTP method specified for route ' + route.path);\n        break;\n      }\n  });\n};\n\nfunction ensureAuthorized(req, res, next) {\n  req.isAuthenticated()\n    ? next()\n    : res.redirect('/');\n\n  //if(!req.user) role = userRoles.public;\n  //else          role = req.user.role;\n\n  //var accessLevel = _.findWhere(routes, { path: req.route.path }).accessLevel || accessLevels.public;\n\n  //if(!(accessLevel.bitMask & role.bitMask)) return res.send(403);\n}\n\nfunction register(req, res, next) {\n  try {\n    userModel.validate(req.body);\n  }\n  catch(err) {\n    return res.send(432, err.message);\n  }\n\n  userModel.addUser(req.body.username, req.body.password, req.body.email, function(err, usr) {\n    if(err === 'UserAlreadyExists') return res.send(432, \"User already exists\");\n    else if(err === 'UserDbError') return res.send(433, \"DB can't add user\");\n    else if(err) return res.send(400);\n\n    req.logIn(usr, function(err) {\n      if(err) return next(err); \n      else return res.json(200, usr); \n    });\n  });\n}\n\nfunction login(req, res, next) {\n  passport.authenticate('local', function(err, user) {\n\n  if(err)     { return next(err); }\n  if(!user)   { return res.send(400); }\n\n  req.logIn(user, function(err) {\n    if(err) return next(err);\n\n    if(req.body.rememberme) req.session.cookie.maxAge = 1000 * 60 * 60 * 24 * 7;\n    res.json(200, { id: user.id, usrLogged: true });\n    });\n  })(req, res, next);\n}\n\nfunction logout(req, res, next) {\n  if(req.isAuthenticated()) req.logout();\n  if(userModel.model != null) userModel.logoutUser();\n  res.send(200);\n}\n\nfunction getuser(req, res, next) {\n  if(!req.isAuthenticated()) return res.send(200, { id: 0, usrLogged: false });\n\n  userModel.getUserById(req.params.user_id, function(err, usr) {\n    if(err === 'UserDbError') return res.send(433, \"DB can't add user\");\n    else if(err === 'NoUser') return res.send(434, 'User not found');\n    else if(err) return res.send(400);\n    \n    res.json(200, usr);\n  });\n}\n\nfunction getLoggedUser(req, res, next) {\n  if(!req.isAuthenticated()) return res.send(200, { id: 0, usrLogged: false });\n  \n  var loggedUser = userModel.getLoggedUser();\n  if(loggedUser === null) return res.send(200, { id: 0, usrLogged: false });\n  \n  res.json(200, { id: loggedUser.id, usrLogged: true });\n}\n\nfunction getgroup(req, res, next) {\n  res.send(200);\n}\n\nfunction getgroups(req, res, next) {\n  if(!req.isAuthenticated()) return res.send(200, { id: 0, usrLogged: false });\n  \n  var loggedUser = userModel.getLoggedUser();\n  if(loggedUser === null) return res.send(200, { id: 0, usrLogged: false });\n  \n  groupModel.getGroups(loggedUser, null, function(err, groups) {\n    if(err) return res.send(400, err);\n    \n    res.json(groups);\n  });\n}\n\nfunction savegroup(req, res, next) {\n  if(!req.isAuthenticated()) return res.send(200, { id: 0, usrLogged: false });\n\n  var loggedUser = userModel.getLoggedUser();\n  if(loggedUser === null) return res.send(200, { id: 0, usrLogged: false });\n  \n  var arrGrId = loggedUser.grouplist.map(function(object) { return object.groupId });\n  var index = arrGrId.indexOf(Number(req.params.group_id));\n  if(index === -1) loggedUser.grouplist.push( { groupId: Number(req.params.group_id), permission: 0 } );\n    else {\n      loggedUser.grouplist[index].groupId = Number(req.params.group_id);\n      loggedUser.grouplist[index].permission = 0;\n    }\n  loggedUser.save();\n\n  delete req.body._id;\n  delete req.body.__v;\n  groupModel.model.findOneAndUpdate({id : Number(req.params.group_id)}, req.body, {upsert:true}, function(err, group) {\n    if (err) { res.send(err); }\n    res.send(200);\n  });\n}\n\nfunction deletegroup(req, res, next) {\n  res.send(400);\n}\n\nfunction gettasks(req, res, next) {\n  if(!req.isAuthenticated()) return res.send(200, { id: 0, usrLogged: false });\n\n  var loggedUser = userModel.getLoggedUser();\n  if(loggedUser === null) return res.send(200, { id: 0, usrLogged: false });\n\n  //!!!!!Вставить проверку на права просмотра группы для текущего пользователя!!!!!\n\n  //Проверим переданный атрибут - идентификатор группы по которой происходит отбор задач\n  //если идентификатор пустой, тогда делается выборка по всем личным группам\n\n  groupModel.getGroupById(req.params.group_id, function(err, grp) {\n    if(err === 'GroupDbError') return res.send(433, \"DB group error\");\n    else if(err === 'NoGroup') return res.send(434, 'Group not found');\n    else if(err) return res.send(400);\n\n    var arrTaskId = grp.tasklist.map(function(object) { return object.taskId });\n    taskModel.model.find({ id: { $in: arrTaskId } }, function(err, tasks) {\n      if (err) { res.send(err); return; }\n      res.json(tasks);\n    });\n  });\n}\n\nfunction gettask(req, res, next) {\n  res.send(400);\n}\n\nfunction savetask(req, res, next) {\n  if(!req.isAuthenticated()) return res.send(200, { id: 0, usrLogged: false });\n\n  var loggedUser = userModel.getLoggedUser();\n  if(loggedUser === null) return res.send(200, { id: 0, usrLogged: false });\n  \n  //!!!!!Вставить проверку на права просмотра группы для текущего пользователя!!!!!\n  \n  groupModel.getGroupById(req.params.group_id, function(err, grp) {\n    if(err === 'GroupDbError') return res.send(433, \"DB group error\");\n    else if(err === 'NoGroup') return res.send(434, 'Group not found');\n    else if(err) return res.send(400);\n\n    var arrTaskId = grp.tasklist.map(function(object) { return object.taskId });\n    var index = arrTaskId.indexOf(Number(req.params.task_id));\n    if(index === -1) grp.tasklist.push( { taskId: Number(req.params.task_id), permission: 0 } );\n      else {\n        grp.tasklist[index].taskId = Number(req.params.task_id);\n        grp.tasklist[index].permission = 0;\n      }\n    grp.save();\n\n    delete req.body._id;\n    delete req.body.__v;\n    taskModel.model.findOneAndUpdate({id : Number(req.params.task_id)}, req.body, {upsert:true}, function(err, task) {\n      if (err) { res.send(err); }\n      res.send(200);\n    });\n  });  \n}\n\nfunction deletetask(req, res, next) {\n  res.send(400);\n}\n\nfunction userlist(req, res, next) {\n  var start = req.param(\"start\");\n  var count = req.param(\"count\");\n  \n  if (!start && !count){\n    //first time call\n        res.send({\n            total_count:5000,\n            data:[\n                //initial set of data\n                { value:\"1\"},\n                { value:\"2\"},\n                { value:\"3\"}\n            ]\n        });\n    } else {\n        //get \"count\" records from \"pos\" position\n        var json = { pos:start, data:[] };\n        for (var i = 0; i < count; i++) {\n            json.data.push({ value:\"a\"+(start*1+(i+1)) })\n        };\n        res.send(json);\n    }\n  \n  var mydataset = { \n      pos:0, \n      total_count:150, \n      data:[\n\t  { img: '1.jpg', name: 'bru', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru2', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru3', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru4', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru5', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru6', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru7', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru8', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru9', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru10', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru11', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru12', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru13', email: 'bru@bru.bru' },\n\t  { img: '1.jpg', name: 'bru14', email: 'bru@bru.bru' }\n\t] };\n\tres.json(mydataset);\n  //res.send(200);\n}\n//432 - Autorization error\n//433 - User db error\n//434 - User not found","undoManager":{"mark":93,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":314,"column":3},"end":{"row":314,"column":56},"action":"insert","lines":["{ img: '1.jpg', name: 'bru3', email: 'bru@bru.bru' },"]}]}],[{"group":"doc","deltas":[{"start":{"row":314,"column":56},"end":{"row":315,"column":0},"action":"insert","lines":["",""]},{"start":{"row":315,"column":0},"end":{"row":315,"column":3},"action":"insert","lines":["\t  "]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":3},"end":{"row":315,"column":56},"action":"insert","lines":["{ img: '1.jpg', name: 'bru3', email: 'bru@bru.bru' },"]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":55},"end":{"row":315,"column":56},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":29},"end":{"row":309,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":29},"end":{"row":309,"column":30},"action":"insert","lines":["4"]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":29},"end":{"row":310,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":29},"end":{"row":310,"column":30},"action":"insert","lines":["5"]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":29},"end":{"row":311,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":29},"end":{"row":311,"column":30},"action":"insert","lines":["6"]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":29},"end":{"row":312,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":29},"end":{"row":312,"column":30},"action":"insert","lines":["7"]}]}],[{"group":"doc","deltas":[{"start":{"row":313,"column":29},"end":{"row":313,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":313,"column":29},"end":{"row":313,"column":30},"action":"insert","lines":["8"]}]}],[{"group":"doc","deltas":[{"start":{"row":314,"column":29},"end":{"row":314,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":314,"column":29},"end":{"row":314,"column":30},"action":"insert","lines":["9"]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":29},"end":{"row":315,"column":30},"action":"remove","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":29},"end":{"row":315,"column":30},"action":"insert","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":30},"end":{"row":315,"column":31},"action":"insert","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":56},"end":{"row":315,"column":57},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":315,"column":57},"end":{"row":316,"column":0},"action":"insert","lines":["",""]},{"start":{"row":316,"column":0},"end":{"row":316,"column":3},"action":"insert","lines":["\t  "]}]}],[{"group":"doc","deltas":[{"start":{"row":316,"column":3},"end":{"row":316,"column":56},"action":"insert","lines":["{ img: '1.jpg', name: 'bru10', email: 'bru@bru.bru' }"]}]}],[{"group":"doc","deltas":[{"start":{"row":316,"column":56},"end":{"row":316,"column":57},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":316,"column":57},"end":{"row":317,"column":0},"action":"insert","lines":["",""]},{"start":{"row":317,"column":0},"end":{"row":317,"column":3},"action":"insert","lines":["\t  "]}]}],[{"group":"doc","deltas":[{"start":{"row":317,"column":3},"end":{"row":317,"column":56},"action":"insert","lines":["{ img: '1.jpg', name: 'bru10', email: 'bru@bru.bru' }"]}]}],[{"group":"doc","deltas":[{"start":{"row":317,"column":56},"end":{"row":318,"column":0},"action":"insert","lines":["",""]},{"start":{"row":318,"column":0},"end":{"row":318,"column":3},"action":"insert","lines":["\t  "]}]}],[{"group":"doc","deltas":[{"start":{"row":318,"column":3},"end":{"row":318,"column":56},"action":"insert","lines":["{ img: '1.jpg', name: 'bru10', email: 'bru@bru.bru' }"]}]}],[{"group":"doc","deltas":[{"start":{"row":318,"column":56},"end":{"row":319,"column":0},"action":"insert","lines":["",""]},{"start":{"row":319,"column":0},"end":{"row":319,"column":3},"action":"insert","lines":["\t  "]}]}],[{"group":"doc","deltas":[{"start":{"row":319,"column":3},"end":{"row":319,"column":4},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":319,"column":3},"end":{"row":319,"column":4},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":319,"column":3},"end":{"row":319,"column":56},"action":"insert","lines":["{ img: '1.jpg', name: 'bru10', email: 'bru@bru.bru' }"]}]}],[{"group":"doc","deltas":[{"start":{"row":317,"column":56},"end":{"row":317,"column":57},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":318,"column":56},"end":{"row":318,"column":57},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":316,"column":30},"end":{"row":316,"column":31},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":316,"column":30},"end":{"row":316,"column":31},"action":"insert","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":317,"column":30},"end":{"row":317,"column":31},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":317,"column":30},"end":{"row":317,"column":31},"action":"insert","lines":["2"]}]}],[{"group":"doc","deltas":[{"start":{"row":318,"column":30},"end":{"row":318,"column":31},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":318,"column":30},"end":{"row":318,"column":31},"action":"insert","lines":["3"]}]}],[{"group":"doc","deltas":[{"start":{"row":319,"column":30},"end":{"row":319,"column":31},"action":"remove","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":319,"column":30},"end":{"row":319,"column":31},"action":"insert","lines":["4"]}]}],[{"group":"doc","deltas":[{"start":{"row":304,"column":35},"end":{"row":305,"column":0},"action":"insert","lines":["",""]},{"start":{"row":305,"column":0},"end":{"row":305,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":2},"end":{"row":305,"column":70},"action":"insert","lines":["{ \"pos\":0, \"total_count\":999, \"data\":[ ... data objects here ... ] }"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":2},"end":{"row":305,"column":3},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":3},"end":{"row":305,"column":4},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":4},"end":{"row":305,"column":5},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":5},"end":{"row":305,"column":6},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":6},"end":{"row":305,"column":7},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":7},"end":{"row":305,"column":8},"action":"insert","lines":["y"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":8},"end":{"row":305,"column":9},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":9},"end":{"row":305,"column":10},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":10},"end":{"row":305,"column":11},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":11},"end":{"row":305,"column":12},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":12},"end":{"row":305,"column":13},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":13},"end":{"row":305,"column":14},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":14},"end":{"row":305,"column":15},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":15},"end":{"row":305,"column":16},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":16},"end":{"row":305,"column":17},"action":"insert","lines":["="]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":17},"end":{"row":305,"column":18},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":43},"end":{"row":305,"column":46},"action":"remove","lines":["999"]},{"start":{"row":305,"column":43},"end":{"row":305,"column":44},"action":"insert","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":44},"end":{"row":305,"column":45},"action":"insert","lines":["4"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":55},"end":{"row":305,"column":82},"action":"remove","lines":[" ... data objects here ... "]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":55},"end":{"row":305,"column":58},"action":"remove","lines":["] }"]}]}],[{"group":"doc","deltas":[{"start":{"row":321,"column":1},"end":{"row":321,"column":2},"action":"remove","lines":["]"]}]}],[{"group":"doc","deltas":[{"start":{"row":321,"column":1},"end":{"row":321,"column":4},"action":"insert","lines":["] }"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":0},"end":{"row":306,"column":14},"action":"remove","lines":["  var extr = ["]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":0},"end":{"row":307,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":321,"column":10},"end":{"row":321,"column":14},"action":"remove","lines":["extr"]},{"start":{"row":321,"column":10},"end":{"row":321,"column":19},"action":"insert","lines":["mydataset"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":44},"end":{"row":305,"column":45},"action":"remove","lines":["4"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":44},"end":{"row":305,"column":45},"action":"insert","lines":["5"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":45},"end":{"row":305,"column":46},"action":"insert","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":4},"end":{"row":68,"column":0},"action":"insert","lines":["",""]},{"start":{"row":68,"column":0},"end":{"row":68,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":68,"column":2},"end":{"row":72,"column":4},"action":"insert","lines":["  {","    path: '/api/userlist',","    httpMethod: 'GET',","    middleware: [userlist]","  },"]}]}],[{"group":"doc","deltas":[{"start":{"row":68,"column":2},"end":{"row":68,"column":4},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":24},"end":{"row":69,"column":25},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":25},"end":{"row":69,"column":26},"action":"insert","lines":["*"]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":20},"end":{"row":311,"column":0},"action":"insert","lines":["",""]},{"start":{"row":311,"column":0},"end":{"row":311,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":4},"end":{"row":311,"column":6},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":6},"end":{"row":311,"column":7},"action":"remove","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":9},"end":{"row":311,"column":10},"action":"remove","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":13},"end":{"row":311,"column":14},"action":"remove","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":13},"end":{"row":312,"column":0},"action":"insert","lines":["",""]},{"start":{"row":312,"column":0},"end":{"row":312,"column":6},"action":"insert","lines":["      "]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":17},"end":{"row":312,"column":18},"action":"remove","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":23},"end":{"row":312,"column":24},"action":"remove","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":27},"end":{"row":312,"column":28},"action":"remove","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":23},"end":{"row":313,"column":0},"action":"insert","lines":["",""]},{"start":{"row":313,"column":0},"end":{"row":313,"column":6},"action":"insert","lines":["      "]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":35},"end":{"row":310,"column":0},"action":"insert","lines":["",""]},{"start":{"row":310,"column":0},"end":{"row":310,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":2},"end":{"row":311,"column":35},"action":"insert","lines":["    var start = req.param(\"start\");","    var count = req.param(\"count\");"]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":4},"end":{"row":310,"column":6},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":2},"end":{"row":310,"column":4},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":311,"column":2},"end":{"row":311,"column":4},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":312,"column":2},"end":{"row":313,"column":0},"action":"insert","lines":["",""]},{"start":{"row":313,"column":0},"end":{"row":313,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":69,"column":24},"end":{"row":69,"column":25},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":68,"column":0},"end":{"row":73,"column":0},"action":"remove","lines":["  {","    path: '/api/userlist*',","    httpMethod: 'GET',","    middleware: [userlist]","  },",""]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":2},"end":{"row":309,"column":0},"action":"insert","lines":["",""]},{"start":{"row":309,"column":0},"end":{"row":309,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":2},"end":{"row":310,"column":0},"action":"insert","lines":["",""]},{"start":{"row":310,"column":0},"end":{"row":310,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":2},"end":{"row":326,"column":5},"action":"insert","lines":["   if (!start && !count){","        //first time call","        res.send({","            total_count:5000,","            data:[","                //initial set of data","                { value:\"1\"},","                { value:\"2\"},","                { value:\"3\"}","            ]","        });","    } else {","        //get \"count\" records from \"pos\" position","        var json = { pos:start, data:[] };","        for (var i = 0; i < count; i++) {","            json.data.push({ value:\"a\"+(start*1+(i+1)) })","        };","        res.send(json);","    }"]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":4},"end":{"row":308,"column":5},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":2},"end":{"row":308,"column":4},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":2},"end":{"row":309,"column":4},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":2},"end":{"row":309,"column":4},"action":"remove","lines":["  "]}]}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":3504.5,"scrollleft":0,"selection":{"start":{"row":310,"column":2},"end":{"row":310,"column":2},"isBackwards":false},"options":{"tabSize":2,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":291,"state":"start","mode":"ace/mode/javascript"}}}