{"filter":false,"title":"main.js","tooltip":"/client/js/main.js","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":18,"column":53},"end":{"row":18,"column":54},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":54},"end":{"row":18,"column":55},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":82},"end":{"row":18,"column":88},"action":"remove","lines":["Router"]},{"start":{"row":18,"column":82},"end":{"row":18,"column":94},"action":"insert","lines":["clientRouter"]}]}],[{"group":"doc","deltas":[{"start":{"row":37,"column":4},"end":{"row":37,"column":33},"action":"remove","lines":["webix.message('hello index');"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":26},"end":{"row":24,"column":0},"action":"insert","lines":["",""]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":4},"end":{"row":26,"column":41},"action":"insert","lines":["               appController = new Controller({ model: appModel});","","                Backbone.history.start();"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":19},"end":{"row":24,"column":32},"action":"remove","lines":["appController"]},{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"insert","lines":["C"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"remove","lines":["C"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":20},"end":{"row":24,"column":21},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":19},"end":{"row":24,"column":21},"action":"remove","lines":["cl"]},{"start":{"row":24,"column":19},"end":{"row":24,"column":31},"action":"insert","lines":["clientRouter"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":82},"end":{"row":18,"column":83},"action":"remove","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":82},"end":{"row":18,"column":83},"action":"insert","lines":["C"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":38},"end":{"row":24,"column":48},"action":"remove","lines":["Controller"]},{"start":{"row":24,"column":38},"end":{"row":24,"column":50},"action":"insert","lines":["ClientRouter"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":16},"end":{"row":24,"column":18},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":14},"end":{"row":24,"column":16},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":12},"end":{"row":24,"column":14},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":10},"end":{"row":24,"column":12},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":8},"end":{"row":24,"column":10},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":6},"end":{"row":24,"column":8},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":4},"end":{"row":24,"column":6},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":36},"end":{"row":24,"column":54},"action":"remove","lines":["{ model: appModel}"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":4},"end":{"row":24,"column":5},"action":"insert","lines":["v"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":5},"end":{"row":24,"column":6},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":6},"end":{"row":24,"column":7},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":7},"end":{"row":24,"column":8},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":0},"end":{"row":26,"column":41},"action":"remove","lines":["                Backbone.history.start();"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":0},"end":{"row":43,"column":9},"action":"remove","lines":["","    var Router = new (Backbone.Router.extend({","\t  //слева роут, косая в скобках означает, что роут может быть как с косой чертой на конце, так и без нее","\t  //справа функция, которая вызовется для соответствующего роута","\t\troutes:{","\t\t\t'home(/)':'home',","\t\t\t'':'index'","\t\t},","\t\t//home выбрасывает в корень","\t\thome:function() {","\t\t  webix.message('hello home');","\t\t},","\t\t//корень приложения","\t\tindex:function() {","\t\t  ","\t\t},","","  \t}))();"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["","  \t"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":43},"end":{"row":18,"column":44},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":44},"end":{"row":18,"column":45},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":44},"end":{"row":18,"column":45},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"insert","lines":["_"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":26},"end":{"row":18,"column":27},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":27},"end":{"row":18,"column":28},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":28},"end":{"row":18,"column":29},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":9},"end":{"row":18,"column":36},"action":"remove","lines":["'codebase/webix_debug.js', "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":38},"end":{"row":18,"column":39},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":39},"end":{"row":18,"column":40},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":40},"end":{"row":18,"column":67},"action":"insert","lines":["'codebase/webix_debug.js', "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":66},"end":{"row":18,"column":67},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":65},"end":{"row":18,"column":66},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":77},"end":{"row":18,"column":78},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":77},"end":{"row":18,"column":78},"action":"remove","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":77},"end":{"row":18,"column":78},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":77},"end":{"row":18,"column":78},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["    var clientRouter = new ClientRouter();","","  \tBackbone.history.start( { pushState: true } );",""]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":0},"end":{"row":26,"column":29},"action":"insert","lines":["       var myApplication = new Application();","","        myApplication.init();"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":6},"end":{"row":24,"column":7},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":4},"end":{"row":24,"column":6},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":4},"end":{"row":26,"column":6},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":4},"end":{"row":26,"column":6},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":25},"action":"remove","lines":["'../"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":33},"action":"remove","lines":["clientRouter"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":23},"action":"remove","lines":["',"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"insert","lines":["э"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"remove","lines":["э"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"insert","lines":["\\"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"remove","lines":["\\"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":21},"end":{"row":18,"column":23},"action":"insert","lines":["''"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":26},"end":{"row":18,"column":27},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":27},"end":{"row":18,"column":28},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":28},"end":{"row":18,"column":29},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":30},"end":{"row":18,"column":31},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":31},"end":{"row":18,"column":32},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":33},"end":{"row":18,"column":34},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":34},"end":{"row":18,"column":35},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":35},"end":{"row":18,"column":36},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":37},"end":{"row":18,"column":38},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":86},"end":{"row":18,"column":98},"action":"remove","lines":["ClientRouter"]},{"start":{"row":18,"column":86},"end":{"row":18,"column":97},"action":"insert","lines":["application"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":86},"end":{"row":18,"column":87},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":86},"end":{"row":18,"column":87},"action":"insert","lines":["A"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":8},"end":{"row":24,"column":21},"action":"remove","lines":["myApplication"]},{"start":{"row":24,"column":8},"end":{"row":24,"column":9},"action":"insert","lines":["I"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":8},"end":{"row":24,"column":9},"action":"remove","lines":["I"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":8},"end":{"row":24,"column":9},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":9},"end":{"row":24,"column":10},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":10},"end":{"row":24,"column":11},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":11},"end":{"row":24,"column":12},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":12},"end":{"row":24,"column":13},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":13},"end":{"row":24,"column":14},"action":"insert","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":14},"end":{"row":24,"column":15},"action":"insert","lines":["M"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":15},"end":{"row":24,"column":16},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":26,"column":4},"end":{"row":26,"column":17},"action":"remove","lines":["myApplication"]},{"start":{"row":26,"column":4},"end":{"row":26,"column":12},"action":"insert","lines":["inTaskMe"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":28,"column":3},"action":"remove","lines":["require.config({","  baseUrl: 'js/libs',","  paths: {","    jquery: 'jquery.min',","    backbone: 'backbone',","    underscore: 'underscore',","  },","  shim: {","    'underscore': {","      exports: '_'","    },\t\t","    'backbone': {","      deps: ['underscore', 'jquery'],","      exports: 'Backbone'","    }","  }","});","","require(['backbone', '../application', 'codebase/webix_debug.js'], function(Backbone, Application) { ","  //console.log(p1);","  //console.log(p2);","  ","  var webix = window.webix;","  webix.ready(function() {","    var inTaskMe = new Application();","","    inTaskMe.init();","  });","});"]},{"start":{"row":0,"column":0},"end":{"row":682,"column":3},"action":"insert","lines":["//блок, который исполнит вебикс когда все загрузит","var implementFunction = (function() {","  var App = window.App;","  var webix = window.webix;","  var Backbone = window.Backbone;","  ","  App.State = {","    _st : [{","      clientRoute : '',","      segment     : '',   //user, users, groups, tasks, templates, finances, process, files, notes","    }],                          //Стек состояний","    user             : null,     //Пользователь системы","    viewedUser       : null,     //текущий пользователь, выбранный в списке пользователей или друзей","    groupTreeManager : null,     //менеджер дерева для групп","    taskTreeManager  : null,     //менеджер дерева для задач","    groups           : null,     //коллекция групп пользователя системы","    tasks            : null,     //коллекция задач пользователя системы","    serverRoute      : '',","    segmentUserId    : null,","    usrCRC           : null,","    group            : 0,        //Выбранная группа, по которой фильтруются задачи","    usersFilter      : { userId: 0 },","    //флаги состояния приложения this_view_action","    groupstable_ItemSelected  : 0,    //выделенный элемент в области конструктора групп","    groupstable_ItemEdited    : null, //редактируемый элемент в области конструктора групп","    tasktable_ItemSelected    : 0,    //выделенный элемент в области конструктора задач","    tasktable_ItemEdited      : null,  //редактируемый элемент в области конструктора задач","    $init: function() {","      if(this.user != null) { this.user = null; }","      this.user = this.userModelInit();","","      if(this.viewedUser != null) { this.viewedUser = null; }","      this.viewedUser = this.userModelInit();","","      if(this.groupTreeManager != null) { this.groupTreeManager = null; }","      this.groupTreeManager = new treeManager();","","      if(this.taskTreeManager != null) { this.taskTreeManager = null; }","      this.taskTreeManager = new treeManager();","","      if(this.groups != null) { this.groups = null; }","      this.groups = this.groupsModelInit();","","      if(this.tasks != null) { this.tasks = null; }","      this.tasks = this.tasksModelInit();","","      this._st                       = [ { clientRoute: '', segment: '' } ];","      this.serverRoute              = '';","      this.prevClientRoute          = '',","      this.segmentUserId            = null;","      this.usrCRC                   = null;","      this.group                    = 0;","      this.usersFilter              = { userId: 0 };","      this.groupstable_ItemSelected = 0;","      this.groupstable_ItemEdited   = null;","      this.tasktable_ItemSelected   = 0;","      this.tasktable_ItemEdited     = null;","    },","    /**","    * setState","    *   Функция ДОБАВЛЯЕТ новые значения в стек состояний State._st. ","    *   Стек ограничен длиной в 4 элемента, при привышении этой длины первый элемент стека State._st удаляется.","    *   Если атрибут функции содержит не все атрибуты стека State._st, то новое значение дополняется ","    *   значениям из предыдущего состояния стека","    * Attributes:","    *   state - новое состояние стека","    * Result:","    *****************************************************************************/","    setState: function(state) {","      if (typeof state === 'object') {","        var len = this._st.length;","        if(len > 3) this._st.shift();","        len = this._st.push({ clientRoute: '', segment: '' });","        ","          for (var prop in this._st[len - 1]) {","            if(state[prop] === undefined) {","                if(len >= 2)","                    this._st[len - 1][prop] = this._st[len - 2][prop];","                else","                    this._st[len - 1][prop] = null;","            } else {","                this._st[len - 1][prop] = state[prop];","            }","          }","      }","    },","    /**","    * getState","    *   Функция ИЗВЛЕКАЕТ значения из стека состояний State._st. ","    * Attributes:","    *   state - при пустом значении извлекается последний объект стека, ","    *   - при отрицательном числовом значении извлекается предыдущий объект стека на количество ","    *   значений указанных в атрибуте","    *   - если указано строковое значение, то извлекается атрибут объекта стека состояний State.st ","    *   соответствующий этому ключу","    *   step - при отрицательном числовом значении извлекается предыдущий объект стека на количество","    *   значений указанных в атрибуте","    * Result:","    *   объект из стека состояний State._st { clientRoute: '', segment: '' } или значение атрибута ","    *   этого объекта","    *****************************************************************************/","    getState: function(state, step) {","        if(state === undefined) {","            return this._st[this._st.length - 1];","        } else if(typeof state === 'number') {","            return this._st[this._st.length - 1 + state];","        } else if(typeof state === 'string') {","            return this._st[step === undefined ? this._st.length - 1 : this._st.length - 1 + step][state];","        }","        return undefined;","    },","    $srvUrlChanged: function(text, data, XmlHttpRequest) {","      var sr = App.State.serverRoute;","      App.State.serverRoute = '';","      if(sr === App.State.clientRoute) {","        segmentSelector();","      } else {","        App.Router.navigate(sr, {trigger: true});","      }","    },","    $userSuccess: function(model, response, options) {","  \t  //при опросе состояния сервера мы получили url, который пользователь ввел отправляя запрос на сервер","  \t  //но клиентское приложение имеет самостоятельный роут, поэтому мы должны сообщить url пользователя этому роуту","  \t  //и если пользователь авторизирован, перейти по этому урлу, после чего сообщить серверу, что урл обработан","  \t  ","      if(App.State.serverRoute !== '') {","    \t  var promise = webix.ajax().post('api/v1/state', { serverRoute: '' }, App.State.$srvUrlChanged);","  \t        ","        promise.then(function(){}).fail(function(err) {","          webix.message({type: 'error', text: err.responseText});","        });","      } else {","        if(App.State.getState('segment') === '') {","          App.Router.navigate('id' + model.id, {trigger: true});","        } else {","          segmentSelector();","        }","      }","    },","    $userError: function(model, xhr, options) {","      App.State.user.set({'mainUserLogged': false}, {silent: true});","      segmentSelector();","      //заглушечка","    },","    $loadState: function(text, data) {","      //обработка состояния полученного с сервера","      ","      //фиксируем полученный от пользователя URL на сервере, после обработки состояния приложение","      //перейдет по данному URL","      App.State.serverRoute = data.json().serverRoute;","      ","      //(сравниваем авторизации на клиенте и сервере), (хэш суммы пользователя на клиенте и сервере)","      if(data.json().mainUserLogged) {","        //Если пользователь авторизирован на сервере","        ","        //(сравниваем авторизации на клиенте и сервере), (хэш суммы пользователя на клиенте и сервере)","        if((App.State.user.get('mainUserLogged') !== data.json().mainUserLogged) || (App.State.usrCRC !== data.json().usrCRC)) {","          App.State.user.set({'mainUserLogged': true}, {silent: true});","\t\t      App.State.user.url = '/api/v1/users/' + data.json().id;","          App.State.user.fetch({ success: App.State.$userSuccess, error: App.State.$userError, silent:true });","          ","          return;","        }","        ","        segmentSelector();","      } else {","        //Если пользователь не авторизирован на сервере","        if(App.State.user.get('mainUserLogged')) {","          App.State.user.set({'mainUserLogged': false}, {silent: true});","        }","        segmentSelector();","      }","    },","    $autonomeState: function(err) {","      webix.message(err);","      //заглушечка","    },","    /**","    * segmentChange","    *   функция вызывается при смене роута, запоминает предыдущее состояние, делает запрос состояния","    *   с сервера, передает управление дальше в соответствии с Result","    * Attributes:","    *   clientRoute - url по которому переходит пользователь","    *   segment - сегмент который отображается пользователю после перехода по url","    * Result:","    *   ok: $loadState - управление сменой сегмена в зависимости от состояния на сервере","    *   error: $autonomeState - переход к автономному режиму, когда состояние от сервера не получено","    *****************************************************************************/","    segmentChange: function(clientRoute, segment) {","      this.setState( {clientRoute:clientRoute, segment:segment} );","","      var promise = webix.ajax().get('api/v1/state', {}, this.$loadState);","      promise.then(function(realdata) {","        //prevClientRoute = ","      }).fail(this.$autonomeState);","    },","    userModelInit: function() {","      //Инициализируем глобальный объект пользователя со всеми настройками приложения","      var user = new App.Models.User();","  \t  user.on('change:thisTry', function() { });","      user.on('change', function(model, options) { ","        model.save(model.changedAttributes());","      });","      user.on('error', function(model, xhr, options) {});","      ","      return user;","    },","    groupsModelInit: function() {","  \t  var groups = new collectionGroups();","  ","    \tgroups.on('add', function(grp) {","    \t  App.State.groupTreeManager.treeAdd(grp);","    \t});","  \t","    \tgroups.on('remove', function(ind) {","    \t  App.State.groupTreeManager.treeRemove(ind);","    \t});","  ","      groups.on('change', function(model, options) {","        App.State.groupTreeManager.treeChange(model);","        model.save(); ","      });","      ","      groups.on('move', function(currentPosId, newPosId, parentId) {","        App.State.groupTreeManager.move(currentPosId, newPosId, parentId);","      });","      ","      return groups;","    },","    tasksModelInit: function() {","      var tasks = new collectionTasks();","      ","      tasks.on('add', function(tsk) {","        App.State.taskTreeManager.treeAdd(tsk);","      });","      ","    \ttasks.on('remove', function(ind) {","    \t  App.State.taskTreeManager.treeRemove(ind);","    \t});","    ","      tasks.on('change', function(model, options) {","        App.State.taskTreeManager.treeChange(model);","        model.save();","      });","      ","      tasks.on('move', function(currentPosId, newPosId, parentId) {","        App.State.taskTreeManager.move(currentPosId, newPosId, parentId);","      });","      ","      return tasks;","    }","  };","  ","  var dataCountry = new webix.DataCollection({ ","    url:'api/v1/country'","  });","","  var dataCity = new webix.DataCollection({","    url:'api/v1/city'","  });","  ","  var dataFamilyStatus = new webix.DataCollection({","    url:'api/v1/familystatus'","  });","","  webix.ui({","\t\tid:'suggestCountry', view:'suggest', data:dataCountry","\t});","\t","\twebix.ui({","\t  id:'suggestCity', view:'suggest', data:dataCity","\t});","\t","\twebix.ui({","\t  id:'suggestFamilyStatus', view:'suggest', data:dataFamilyStatus","\t});","\t","\twebix.proxy.GroupData = {","    $proxy: true,","    init: function() {","      //webix.extend(this, webix.proxy.offline);","    },","    load: function(view, callback) {","      //Добавляем id вебиксовых вьюх для синхронизации с данными","  \t  //важно добавлять уже после создания всех вьюх, иначе будут добавлены пустые объекты","      App.State.groupTreeManager.viewsAdd($$(view.config.id));","    }","  };","  ","  webix.proxy.TaskData = {","    $proxy: true,","    init: function() {","      //webix.extend(this, webix.proxy.offline);","    },","    load: function(view, callback) {","      //Добавляем id вебиксовых вьюх для синхронизации с данными","  \t  //важно добавлять уже после создания всех вьюх, иначе будут добавлены пустые объекты","      App.State.taskTreeManager.viewsAdd($$(view.config.id));","    }","  };","","  //создадим экземпляр бакбоновского роутера, который будет управлять навигацией на сайте","\tApp.Router = new (Backbone.Router.extend({","\t  //слева роут, косая в скобках означает, что роут может быть как с косой чертой на конце, так и без нее","\t  //справа функция, которая вызовется для соответствующего роута","\t\troutes:{","\t\t\t'login(/)':'login',","\t\t\t'logout(/)':'logout',","\t\t\t'register(/)':'register',","\t\t\t'groups(/)':'groups',","\t\t\t'tasks(/)':'tasks',","\t\t\t'id:id(/)':'user',","\t\t\t'users?id=:id(/)':'userUsers',","\t\t\t'users(/)':'users',","\t\t\t'home(/)':'home',","\t\t\t'':'index'","\t\t},","\t\t//home выбрасывает в корень","\t\thome:function() {","\t\t  //App.State.clientRoute = '/home';","\t\t  this.navigate('', {trigger: true});","\t\t},","\t\t//корень приложения","\t\tindex:function() {","\t\t  App.State.segmentChange('', undefined);","\t\t},","\t\tgroups:function() {","\t\t  App.State.segmentChange('/groups', 'groups');","\t\t},","\t\ttasks:function() {","\t\t  App.State.segmentChange('/tasks', 'tasks');","\t\t},","\t\tusers:function() {","\t\t  App.State.usersFilter.userId = 0;","\t\t  App.State.segmentChange('/users', 'users');","\t\t},","\t\tuser:function(id) {","\t\t  App.State.segmentUserId = id;","\t\t  App.State.segmentChange('/id' + id, 'user');","\t\t},","\t\tuserUsers:function(id) {","\t\t  App.State.usersFilter.userId = id;","\t\t  App.State.segmentUserId = id;","\t\t  App.State.segmentChange('users?id=' + id, 'users');","\t\t},","\t\tlogin:function() {","\t\t  //App.State.clientRoute = '/login';","\t\t  if(!App.State.user.get('mainUserLogged')) {","\t\t    $$('frameCentral_Login').show();","        $$('frameCentralLogin_authenticateError').setValues({src:''});","","\t\t    $$('buttonAutorisationLogin').disable();","\t\t    $$('buttonAutorisationRegister').enable();","\t\t  } else {","\t\t    App.Router.navigate('id' + App.State.user.get('id'), {trigger: true});","\t\t  }","\t\t},","\t\tlogout:function() {","\t\t  //App.State.clientRoute = '/logout';","      var promise = webix.ajax().put('api/v1/logout', { id: App.State.user.get('id') });","\t        ","      promise.then(function(realdata) {","        App.State.user.set({'mainUserLogged': false}, {silent:true});","        App.Router.navigate('', {trigger: true});","      }).fail(function(err){","        connectionErrorShow(err);","      });","\t\t},","\t\tregister:function() {","\t\t  //App.State.clientRoute = '/register';","\t\t  if(!App.State.user.get('mainUserLogged')) {","\t\t    $$('frameCentral_Register').show();","\t\t    $$('frameCentralRegister_authenticateError').setValues({src:''});","\t\t    ","\t\t    $$('buttonAutorisationLogin').enable();","\t\t    $$('buttonAutorisationRegister').disable();","\t\t  } else {","\t\t    App.Router.navigate('id' + App.State.user.get('id'), {trigger: true});","\t\t  }","\t\t}","\t}))();","\t","\t//***************************************************************************","\t//AFTER FETCH FUNCTIONs","\t","\t//Вывод данных пользовательского профиля во фрейм, после успешного получения с сервера (callback)","  var showUserDataAfterSuccess = function(model, response, options) {","    $$('tabviewCentral_User').show();","    $$('tabviewCentral_User').hideProgress();","    ","    $$('scrollviewRight_UserFilter').show();","    ","    //если отображается пользователь, то выводятся поля ввода, в противном случае только информационные","    if(App.State.user.get('id') === App.State.viewedUser.get('id')) {","      //В основном меню выделим пункт профиля","      if('listitemSegmentsSelector_MyProfile' != $$('listSegments_SegmentsSelector').getSelectedId()) {","        $$('listSegments_SegmentsSelector').blockEvent(); //Блокируем срабатывание события при программном выборе пункта меню","        $$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_MyProfile'); //Программно выбираем пункт меню","        $$('listSegments_SegmentsSelector').unblockEvent();","      }      ","      ","      $$('listProfile_UserAttributesSelector').unselectAll();","      $$('frameProfile_user').show();","      App.Func.loadUserPermission();        //Загрузим настройки в панель настроек доступа своего профиля","    } else {","      $$('listProfile_viewedUserAttributesSelector').unselectAll();","      $$('listSegments_SegmentsSelector').unselectAll();","      ","      $$('frameProfile_viewedUser').show();                                   //Показываем фрейм с данными чужого профиля","      if($$('multiviewRight').isVisible()) $$('multiviewRight').hide();       //Если панель настроек доступа видима, то скроем","      if($$('toggleHeader_Options').getValue()) $$('toggleHeader_Options').setValue(0); //Если кнопка настроке доступа нажата, то отожмем","      $$('toggleHeader_Options').disable();                                   //Заблокируем возможность нажимать кнопку открытия окна настроек доступа","    }","    ","    App.Func.loadUserAttributes();","    ","    //App.State.groups.fetch({ success: showGroupDataAfterFetch });","  };","\t","\tvar showUserDataAfterError = function(model, xhr, options) {","\t  //заглушка","\t};","\t","  var showGroupDataAfterSuccess = function(text, data) {","    //App.State.groupTreeManager.treeBuild(App.State.groups.models);","    ","    //$$('treetableMyGroups_Groupstable').load('GroupData->load');","    $$(\"treetableMyGroups_Groupstable\").parse(text);","  };","","  var showGroupDataAfterError = function(model, xhr, options) {","\t  //заглушка","\t};","","  var showTaskDataAfterFetch = function(Tasks, response, options) {","    App.State.taskTreeManager.treeBuild(App.State.tasks.models);","    ","    $$('treetableMytasks_Tasktable').load('TaskData->load'); //!!!!!!!!!!!!!!!!!!!!!","  };","","  //***************************************************************************","  //INTERFACE MANIPULATION","  //segmentSelector переключает состояние интерфейса в соответствии с теми сегментами, которые были","  //установлены при обратке роутов в backbone App.Router, смена сегментов всегда сопровождается вызовом","  //следующих функций segmengChange()->опрос состояния сервера->segmentSelector()->перерисовка интерфейса","  var segmentSelector = function() {","    var user = App.State.user;","    var viewedUser = App.State.viewedUser;","    ","    //если пользователь залогинился (получаем при опросе состояния сервера)","  \tif(user.get('mainUserLogged')) {","  \t  if(!$$('toolbarHeader').isVisible()) $$('toolbarHeader').show();","  \t  if(!$$('toggleHeader_Options').isEnabled()) $$('toggleHeader_Options').enable();","  \t  ","  \t  //Отрисовка интерфейса в зависимости от выбранного сегмента","  \t  switch(App.State.getState('segment')) {","        case 'user':","       \t  $$('tabviewCentral_User').showProgress({","            type:'icon',","            delay:500","          });","  ","          viewedUser.url = '/api/v1/users/' + App.State.segmentUserId;","          viewedUser.fetch({ success: showUserDataAfterSuccess, error: showUserDataAfterError, silent:true });","","          break;  \t    ","        case 'users':","          //Обработаем показ сегмента пользователей, сперва верно выделим пункты меню","          //Само нажатие нам не нужно производить, поэтому блокируем срабатывание события","          //если фильтр по пользователю не выбран, выделяем пункт пользователей в основном меню","          //в противном случае снимаем выделение","          $$('listSegments_SegmentsSelector').blockEvent();","          if(App.State.usersFilter.userId === 0) {","            if('listitemSegmentsSelector_AllUsers' != $$('listSegments_SegmentsSelector').getSelectedId()) {","              $$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_AllUsers');","            }","          } else {","            $$('listSegments_SegmentsSelector').unselectAll();","          }","          $$('listSegments_SegmentsSelector').unblockEvent();","          ","          $$('dataviewCentral_Users').clearAll();","          $$('dataviewCentral_Users').loadNext(4, 0, null, 'api/v1/users');","","          $$('frameCentral_Users').show();","          $$('scrollviewRight_UsersFilter').show();","          ","          break;","        case 'groups':","          //Обработаем показ сегмента групп, сперва верно выделим пункты меню","          //Само нажатие нам не нужно производить, поэтому блокируем срабатывание события","          //если фильтр по пользователю не выбран, выделяем пункт групп в основном меню","          //в противном случае снимаем выделение          ","          $$('listSegments_SegmentsSelector').blockEvent();","          if(App.State.usersFilter.userId === 0) {","            if('listitemSegmentsSelector_AllGroups' != $$('listSegments_SegmentsSelector').getSelectedId()) {","              $$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_AllGroups');","            }","          } else {","            $$('listSegments_SegmentsSelector').unselectAll();","          }","          $$('listSegments_SegmentsSelector').unblockEvent();","          ","          //App.State.groups.fetch({ success: showGroupDataAfterFetch });","          $$('treetableMyGroups_Groupstable').clearAll();","          var promise = webix.ajax().get('api/v1/groups', { userId: App.State.usersFilter.userId }, showGroupDataAfterSuccess);","          promise.then(function(realdata) {}).fail(showGroupDataAfterError);","","          //$$('treetableMyGroups_Groupstable').load('api/v1/groups');","          //$$('treetableMyGroups_Groupstable').loadNext(10, 0, null, 'api/v1/groups');","","          $$('tabviewCentral_Groups').show();","          $$('scrollviewRight_GroupsFilter').show();","          ","          break;","        case 'tasks':","          $$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_AllTasks');","          ","          App.State.tasks.fetch({ success: showTaskDataAfterFetch });","          $$('tabviewCentral_Task').show();","          break;","        case 'templates':","          // code","          break;","        case 'finances':","          break;","        case 'process':","          // code","          break;","        case 'files':","          // code","          break;","        case 'notes':","          // code","          break;","  \t  }","  \t} else {","  \t  console.log('segmentSelector: user not logged');","\t    App.State.$init();","\t    offState();","  \t  $$('frameCentral_Greeting').show();","  \t} //if(App.State.user.mainUserLogged)    ","  };","  ","  var connectionErrorShow = function(err) {","    if(err.status === 434) {","      //defaultState();","      //App.Router.navigate('', {trigger: true});","    }","    webix.message({type:'error', text:err.responseText});","  };","","  App.State.$init();","","  //вебикс конфигурация основного окна загруженная в экземпляр объекта вебиксового менеджера окон","  var frameBase = new webix.ui({","    id:'frameBase',","    rows:[App.Frame.multiviewToolbar, ","      { cols: [App.Frame.multiviewLeft, App.Frame.multiviewCentral, App.Frame.multiviewRight] }","    ]","  });","","  var offState = function() {","    $$('multiviewLeft').hide();","    $$('multiviewRight').hide();","","    $$('treetableMytasks_Tasktable').clearAll();","    $$('treetableMyGroups_Groupstable').clearAll();","    ","    $$('toggleHeader_Menu').setValue(0);","    $$('toggleHeader_Options').setValue(0);","    ","    $$('toolbarAutorisation').show();","    $$('buttonAutorisationLogin').enable();","\t  $$('buttonAutorisationRegister').enable();","  };","","  offState();","","  webix.extend($$('tabviewCentral_User'), webix.ProgressBar);","","  webix.UIManager.addHotKey('enter', function() { ","    if($$('frameCentral_Register').isVisible()) {","      App.Func.Register();","    } else if($$('frameCentral_Login').isVisible()) {","      App.Func.Login();","    }","  });","","  //************************************************************************************************","  //Обработчики событий","  $$('treetableMyGroups_Groupstable').attachEvent('onAfterEditStart', function(id) {","    App.State.groupstable_ItemEdited = id;","  });","","  $$('treetableMyGroups_Groupstable').attachEvent('onAfterEditStop', function(state, editor, ignoreUpdate) {","    var ItemEdited = App.State.groupstable_ItemEdited;","    var ItemSelected = App.State.groupstable_ItemSelected;","    if (editor.column === 'name') {","      if(ItemEdited != ItemSelected) {","        this.getItem(ItemEdited).name = state.old;","        this.updateItem(ItemEdited);","        App.State.groupstable_ItemEdited = null;","      } else {","        //var selectGroup = App.State.groups.get(App.State.groupstable_ItemEdited);","        //selectGroup.set({ 'name': state.value });","      }","    }","  });","  ","  $$('treetableMytasks_Tasktable').attachEvent('onAfterEditStart', function(id) {","    App.State.tasktable_ItemEdited = id;","  });","","  $$('treetableMytasks_Tasktable').attachEvent('onAfterEditStop', function(state, editor, ignoreUpdate) {","    var ItemEdited = App.State.tasktable_ItemEdited;","    var ItemSelected = App.State.tasktable_ItemSelected;","    if (editor.column === 'name') {","      if(ItemEdited != ItemSelected) {","        this.getItem(ItemEdited).name = state.old;","        this.updateItem(ItemEdited);","        App.State.tasktable_ItemEdited = null;","      } else {","        var selectTask = App.State.tasks.get(App.State.tasktable_ItemEdited);","        selectTask.set({ 'name': state.value });","      }","    }","  });","  ","  var centralUsers_DataRefresh = function(data) {","    $$('dataviewCentral_Users').parse(data);","  };","  ","  $$('dataviewCentral_Users').attachEvent('onDataRequest', function(start, count, callback, url) {","    webix.ajax('api/v1/users', { start:start, count:count, userId: App.State.usersFilter.userId }, centralUsers_DataRefresh);","    return false;","  });","","  $$('upl1').attachEvent('onUploadComplete', function(){","    $$('avatarProfile_user').refresh();","    $$('avatarLoaderFrame').hide();","  });","  ","  var dp = webix.dp('treetableMyGroups_Groupstable');","  dp.config.updateFromResponse = true;  ","  dp.attachEvent('onAfterSaveError', function(id, status, response, detail) {","    // structure of status: {","    //   id:\"id of item\",","    //   status:\"update status\",","    //   newid:\"new id after operation\"","    // }","    // Structure of details {","    //   text:\"full text of server side response\",","    //   data:\"webix ajax data related to the error\",","    //   loader:\"xmlHttpRequest object related to the error\"","    // }","    ","    return true;","  });","  dp.attachEvent('onBeforeSaveError', function(id, status, response, detail) {","    return true;//return true to ignore the error and mark item as saved","  });  ","  dp.attachEvent('onLoadError', function(text, data, loader) {","    return true;","  });","  dp.attachEvent('onBeforeInsert', function(id, object) {","    $$('treetableMyGroups_Groupstable').showOverlay('Добавление группы...');","    return true;","  });","  dp.attachEvent('onBeforeUpdate', function(id, object) {","    $$('treetableMyGroups_Groupstable').showOverlay('Изменение в группе...');","    return true;","  });  ","  dp.attachEvent('onAfterSave', function(response, id, update) {","    $$('treetableMyGroups_Groupstable').hideOverlay();","    return true;","  });","","  webix.i18n.parseFormatDate = webix.Date.strToDate('%Y/%m/%d');","  webix.event(window, 'resize', function() { frameBase.adjust(); });","  //Backbone.history.start({pushState: true, root: \"/\"});","  Backbone.history.start( { pushState: true } );","});"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"tabSize":2,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1034,"mode":"ace/mode/javascript"}},"timestamp":1423731781000,"hash":"31f8abbbe0623f27527f57e79701b708b4edfb14"}