{"changed":true,"filter":false,"title":"main.js","tooltip":"/client/js/main.js","value":"//блок, который исполнит вебикс когда все загрузит\nvar implementFunction = (function() {\n  var App = window.App;\n  var webix = window.webix;\n  var Backbone = window.Backbone;\n  \n  App.State = {\n    $init: function() {\n      this.segment                  = 'users';\n      this.group                    = 0;\n      this.groupstable_ItemSelected = 0;\n      this.groupstable_ItemEdited   = null;\n      this.tasktable_ItemSelected   = 0;\n      this.tasktable_ItemEdited     = null;\n    },\n    segment           : 'users',  //groups, tasks, templates, finances, process, files, notes\n    group             : 0,        //Выбранная группа, по которой фильтруются задачи\n    //флаги состояния приложения this_view_action\n    groupstable_ItemSelected  : 0,    //выделенный элемент в области конструктора групп\n    groupstable_ItemEdited    : null, //редактируемый элемент в области конструктора групп\n    tasktable_ItemSelected    : 0,    //выделенный элемент в области конструктора задач\n    tasktable_ItemEdited      : null  //редактируемый элемент в области конструктора задач\n  };\n  \n  var dataCountry = new webix.DataCollection({ \n    url:'api/country'\n  });\n\n  var dataCity = new webix.DataCollection({\n    url:'api/city'\n  });\n  \n  var dataFamilyStatus = new webix.DataCollection({\n    url:'api/familystatus'\n  });\n\n  webix.ui({\n\t\tid:'suggestCountry', view:'suggest', data:dataCountry\n\t});\n\t\n\twebix.ui({\n\t  id:'suggestCity', view:'suggest', data:dataCity\n\t});\n\t\n\twebix.ui({\n\t  id:'suggestFamilyStatus', view:'suggest', data:dataFamilyStatus\n\t});\n\t\n\twebix.proxy.GroupData = {\n    $proxy: true,\n    init: function() {\n      //webix.extend(this, webix.proxy.offline);\n    },\n    load: function(view, callback) {\n      //Добавляем id вебиксовых вьюх для синхронизации с данными\n  \t  //важно добавлять уже после создания всех вьюх, иначе будут добавлены пустые объекты\n      App.Trees.GroupTree.viewsAdd($$(view.config.id));\n    }\n  };\n  \n  webix.proxy.TaskData = {\n    $proxy: true,\n    init: function() {\n      //webix.extend(this, webix.proxy.offline);\n    },\n    load: function(view, callback) {\n      //Добавляем id вебиксовых вьюх для синхронизации с данными\n  \t  //важно добавлять уже после создания всех вьюх, иначе будут добавлены пустые объекты\n      App.Trees.TaskTree.viewsAdd($$(view.config.id));\n    }\n  };\n\n  var showInterface = function(enable) {\n    if(enable) $$(\"toolbarHeader\").enable(); else $$(\"toolbarHeader\").disable();\n    $$(\"toolbarHeader\").refresh();\n  };\n  \n  //создадим экземпляр бакбоновского роутера, который будет управлять навигацией на сайте\n\tApp.Router = new (Backbone.Router.extend({\n\t  //слева роут, косая в скобках означает, что роут может быть как с косой чертой на конце, так и без нее\n\t  //справа функция, которая вызовется для соответствующего роута\n\t\troutes:{\n\t\t\t\"login(/)\":\"login\",\n\t\t\t\"logout(/)\":\"logout\",\n\t\t\t\"register(/)\":\"register\",\n\t\t\t\"groups(/)\":\"groups\",\n\t\t\t\"tasks(/)\":\"tasks\",\n\t\t\t\"users(/)\":\"users\",\n\t\t\t'home(/)':\"home\",\n\t\t\t'':\"index\"\n\t\t},\n\t\t//home выбрасывает в корень\n\t\thome:function() {\n\t\t  this.navigate('', {trigger: true});\n\t\t},\n\t\t//корень приложения\n\t\tindex:function() {\n\t\t  if(App.User.get('id') === 0) {\n        var promise = webix.ajax().get('api/logged', {}, function(text, data) {\n          App.User.set({'usrLogged': data.json().usrLogged}, {silent: true});\n          App.User.set({'id': data.json().id}, {silent: true});\n          interfaceSelector();\n\t      });\n\t        \n        promise.then(function(realdata){}).fail(function(err) {\n          connectionErrorShow(err);\n        });\n\t\t  } else {\n\t\t    interfaceSelector();\n\t\t  }\n\t\t},\n\t\tgroups:function() {\n\t\t  this.navigate('', {trigger: true});\n\t\t},\n\t\ttasks:function() {\n\t\t  this.navigate('', {trigger: true});\n\t\t},\n\t\tusers:function() {\n\t\t  this.navigate('', {trigger: true});\n\t\t},\n\t\tlogin:function() {\n\t    $$('frameCentral_Login').show();\n\t    //webix.UIManager.setFocus(\"formLogin\");\n\t\t},\n\t\tlogout:function() {\n      var promise = webix.ajax().put(\"api/logout\", { id: App.User.id });\n\t        \n      promise.then(function(realdata) {\n        defaultState();\n        App.Router.navigate('', {trigger: true});\n      }).fail(function(err){\n        connectionErrorShow(err);\n      });\n\t\t},\n\t\tregister:function() {\n\t    $$('frameCentral_Register').show();\n\t\t}\n\t}))();\n\t\n\t//***************************************************************************\n\t//AFTER FETCH FUNCTIONs\n  var showUserDataAfterFetch = function(User, response, options) {\n    showInterface(true);\n    \n    $$('tabviewCentral_User').show();\n    $$(\"tabviewCentral_User\").hideProgress();\n    \n    if($$(\"frameUserList\").getSelectedId() === '') {\n      $$('frameUserList').select($$('frameUserList').getFirstId());\n      App.Func.fillUserAttributes(App.User.get('id'));\n    } else if ($$(\"frameUserList\").getSelectedId() === $$('frameUserList').getFirstId()) {\n      App.Func.fillUserAttributes(App.User.get('id'));\n    } else {\n      App.Func.fillUserAttributes($$(\"frameUserList\").getSelectedId());\n    }\n    \n    App.Collections.Groups.fetch({ success: showGroupDataAfterFetch });\n  };\n\t\n  var showGroupDataAfterFetch = function(Groups, response, options) {\n    App.Trees.GroupTree.treeBuild(App.Collections.Groups.models);\n    \n    $$('treetableMyGroups_Groupstable').load('GroupData->load');\n  };\n\n  var showTaskDataAfterFetch = function(Tasks, response, options) {\n    App.Trees.TaskTree.treeBuild(App.Collections.Tasks.models);\n    \n    $$('treetableMytasks_Tasktable').load('TaskData->load'); //!!!!!!!!!!!!!!!!!!!!!\n  };\n\n  //***************************************************************************\n  //INTERFACE MANIPULATION\n  var interfaceSelector = function() {\n    //если пользователь залогинился\n  \tif(App.User.get('usrLogged')) {\n  \t  //Отрисовка интерфейса в зависимости от выбранного сегмента\n  \t  showInterface(true);\n  \t  switch(App.State.segment) {\n        case 'users':\n       \t  $$(\"tabviewCentral_User\").showProgress({\n            type:\"icon\",\n            delay:500\n          });\n  \n          App.User.url = '/api/users/' + App.User.get('id');\n          App.User.fetch({ success: showUserDataAfterFetch, silent:true });\n  \t\t        \n          break;\n        case 'groups':\n          App.Collections.Groups.fetch({ success: showGroupDataAfterFetch });\n          $$('tabviewCentral_Groups').show();\n          break;\n        case 'tasks':\n          App.Collections.Tasks.fetch({ success: showTaskDataAfterFetch });\n          $$('tabviewCentral_Task').show();\n          break;\n        case 'templates':\n          // code\n          break;\n        case 'finances':\n          break;\n        case 'process':\n          // code\n          break;\n        case 'files':\n          // code\n          break;\n        case 'notes':\n          // code\n          break;\n  \t  }\n  \t} else {\n  \t  showInterface(false);\n  \t  $$('frameCentral_Greeting').show();\n  \t} //if(App.User.usrLogged)    \n  };\n  \n  var connectionErrorShow = function(err) {\n    if(err.status === 434) {\n      defaultState();\n      App.Router.navigate('', {trigger: true});\n    }\n    webix.message({type:\"error\", text:err.responseText});\n  };\n\n  //***************************************************************************\n  //INIT FUNCTIONs\n  var UserModelInit = function() {\n    //Инициализируем глобальный объект пользователя со всеми настройками приложения\n  \tApp.User = new App.Models.User();\n  \t\n  \tApp.User.on('change:thisTry', function() {\n  \t  //App.Router.navigate('home', {trigger:true} );\n  \t});\n  \t\n    App.User.on('change', function(eventName) {\n      App.User.save(App.User.changedAttributes());\n    });  \t\n  };\n  \n  var GroupModelInit = function() {\n  \tApp.Trees.GroupTree = new treeManager();\n    \n  \tApp.Collections.Groups = new collectionGroups();\n  \n  \tApp.Collections.Groups.on('add', function(grp) {\n  \t  App.Trees.GroupTree.treeAdd(grp);\n  \t});\n  \t\n  \tApp.Collections.Groups.on('remove', function(ind) {\n  \t  App.Trees.GroupTree.treeRemove(ind);\n  \t});\n  \n    App.Collections.Groups.on('change', function(model, options) {\n      App.Trees.GroupTree.treeChange(model);\n      model.save();\n    });\n    \n    App.Collections.Groups.on('move', function(currentPosId, newPosId, parentId) {\n      App.Trees.GroupTree.move(currentPosId, newPosId, parentId);\n    });\n  };\n  \n  var TaskModelInit = function() {\n    App.Trees.TaskTree = new treeManager();\n    \n    App.Collections.Tasks = new collectionTasks();\n    \n    App.Collections.Tasks.on('add', function(tsk) {\n      App.Trees.TaskTree.treeAdd(tsk);\n    });\n    \n  \tApp.Collections.Tasks.on('remove', function(ind) {\n  \t  App.Trees.TaskTree.treeRemove(ind);\n  \t});\n  \n    App.Collections.Tasks.on('change', function(model, options) {\n      App.Trees.TaskTree.treeChange(model);\n      model.save();\n    });\n    \n    App.Collections.Tasks.on('move', function(currentPosId, newPosId, parentId) {\n      App.Trees.TaskTree.move(currentPosId, newPosId, parentId);\n    });    \n  };\n  \n  var defaultState = function() {\n    delete App.User;\n    UserModelInit();\n      \n    delete App.Trees.GroupTree;\n    delete App.Collections.Groups;\n    GroupModelInit();\n    \n    delete App.Trees.TaskTree;\n    delete App.Collections.Tasks;\n    TaskModelInit();\n    \n    $$('treetableMytasks_Tasktable').clearAll();\n    \n    $$('treetableMyGroups_Groupstable').clearAll();\n\n    $$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_MyProfile');\n    \n    $$('multiviewLeft').hide();\n    $$('frameUserList').hide();\n    $$('multiviewRight').hide();\n  };\n  \n  //***************************************************************************\n  //TREE MANAGER\n  //объект организует работу с деревьями, для того что бы линейную бэкбоновскую коллекцию\n  //разворачивать в древовидную структуру и выводить в webix-овые вьюхи\n\tvar treeManager = function (collection) {\n\t  //древовидный массив\n\t  var tree = [];\n\t  var views = [];\n\n    //рекурсивный перебор\n    var treeRecursively = function(branch, list) {\n      if (typeof branch === 'undefined') return null;\n      var tr = [];\n      for(var i=0; i<branch.length; i++)      \n      {\n          branch[i].data = treeRecursively(list[ branch[i].id ], list);\n          tr.push(branch[i]);\n      }\n      return tr;\n    };\n\n    //функция рекурсивного обхода дерева, корень дерева представлен, как branch\n    //ветка дерева содержится в массиве data корня branch т.е. branch->data[branch->data[branch->data]] и т.д.\n    var recursively = function(branch, element, oper) {\n      //проверка на то что корень является данными типа - объект\n      if (typeof branch === 'undefined') return false;\n      //проверка на то что корень не обнулен\n      if (branch === null) return false;\n      \n      //Если родитель корневой элемент, то добавим в корень\n      if ((oper === 'add') && (element.parent_id === 0)) {\n        branch.push(element);\n        return true;        \n      } \n\n      for (var i = 0; i<branch.length; i++) {\n        if (branch[i] === null) continue;\n        \n        if (oper === 'add') {\n          if (element.parent_id === branch[i].id) {\n            if ((branch[i].data === null) || (typeof branch[i].data === 'undefined')) {\n              branch[i].data = [];\n            }\n            branch[i].data.push(element);\n            return true;\n          } else {\n            if(recursively(branch[i].data, element, oper)) { return true }\n          }\n        } else {\n          if (element.id === branch[i].id) {\n            //var deletedElements = this.models.splice(delElementIndex, 1); ПОПРОБУЙ\n            branch[i] = null;\n            //delete branch[i];\n            return true;\n          }\n          else\n          {\n            if(recursively(branch[i].data, element, oper)) { return true }\n          }\n        }\n      }\n    };\n\n    this.treeBuild = function(collection) {\n\t    //преобразуем в линейный массив бэкбоновскую коллекцию (разворачиваем атрибуты объекта)\n      var maplist = collection.map(function(object) { return object.attributes });\n      if(maplist.length > 0) {\n        //сгруппируем элементы массива по родителю\n        var list = _.groupBy(maplist, 'parent_id');\n        //рекурсивно перебирая сгруппированный массив построим дерево\n        tree = treeRecursively(list[0], list);\n      } else {\n        tree = [];\n      }\n    };\n    \n    //добавление элемента в дерево, автоматическое обновление элементов во вьюхах из массива views\n    this.treeAdd = function(element) {\n      var result = recursively(tree, webix.copy(element.attributes), 'add');\n      if(result) {\n        //var currentItem = views[0].getItem(element.attributes.parent_id);\n        //views[0].data.sync(tree);\n        for (var i = views.length; i--; ) {\n          //var insertIndex = tree.getIndexById(element.attributes.parent_id);\n          views[i].add(webix.copy(element.attributes), -1, element.attributes.parent_id);\n          views[i].refresh();\n        }\n      }\n    };\n    \n    this.treeRemove = function(element) {\n      var result = recursively(tree, element.attributes, 'delete');\n      if(result) {\n        for (var i = views.length; i--; ) {\n          views[i].remove(element.attributes.id);\n          views[i].refresh();\n        }\n      }\n    };\n    \n    this.treeChange = function(element) {\n      for (var i = views.length; i--; ) {\n        var record = views[i].getItem(element.get('id'));\n        var chgAtr = element.changedAttributes();\n        var keysArr = _.keys(chgAtr);\n        var valuesArr = _.values(chgAtr);\n        for (var j = keysArr.length; j--; ) {\n          record[keysArr[j]] = valuesArr[j];\n        }\n        views[i].refresh();\n      }\n    };\n    \n    this.move = function(currentPosId, newPosId, parentId) {\n      for (var i = views.length; i--; ) {\n        //var newPosIndex = views[i].getBranchIndex(newPosId, views[i].getParentId(newPosId));\n        //views[i].move(currentPosId, newPosIndex, null, { parent: views[i].getParentId(newPosId) });\n        //views[i].refresh();\n        var newPosIndex = views[i].getBranchIndex(newPosId, parentId);\n        views[i].move(currentPosId, newPosIndex, null, { parent: parentId });\n        views[i].refresh();\n      }      \n    };\n    \n    //добавление вьюхи в массив для датабиндинга\n    this.viewsAdd = function(view) {\n      if (typeof view === 'object')\n      {\n        //добавим в массив, если нет такой\n        if(views.indexOf(view) === -1) {\n          views.push(view);\n          \n          //обновим вновь добавленную вьюху информцией из дерева\n          view.clearAll();\n          view.parse(JSON.stringify(tree));\n        }\n      }\n    };\n    \n    //удаление вьюхи из массива датабиндинга\n    this.viewsDelete = function(view) {\n      console.log('view delete');\n    };\n    \n    //если при создании объекта передан не пустой параметр, то формируется дерево\n\t  if (typeof collection !== 'undefined')\n\t  {\n\t    this.treeBuild(collection);\n\t  }\n  };\n\n  //_.extend(App.Collections.Groups, Backbone.Events);\n  UserModelInit();\n  GroupModelInit();\n  TaskModelInit();\n\n  //вебикс конфигурация основного окна загруженная в экземпляр объекта вебиксового менеджера окон\n  //описание внизу модуля\n  var frameBase = new webix.ui({\n    id:\"frameBase\",\n    rows:[App.Frame.toolbarHeader, \n      { cols: [App.Frame.multiviewLeft, App.Frame.multiviewCentral,  App.Frame.frameUserList, App.Frame.multiviewRight] }\n    ]\n  });\n\n  webix.extend($$(\"tabviewCentral_User\"), webix.ProgressBar);\n  \n  $$(\"multiviewLeft\").hide();\n  $$(\"multiviewRight\").hide();\n  $$(\"frameUserList\").hide();\n  \n  webix.UIManager.addHotKey('enter', function() { \n    if($$('frameCentral_Register').isVisible()) {\n      App.Func.Register();\n    } else if($$('frameCentral_Login').isVisible()) {\n      App.Func.Login();\n    }\n  });\n  \n  $$('treetableMyGroups_Groupstable').attachEvent('onAfterEditStart', function(id) {\n    App.State.groupstable_ItemEdited = id;\n  });\n\n  $$('treetableMyGroups_Groupstable').attachEvent('onAfterEditStop', function(state, editor, ignoreUpdate) {\n    var ItemEdited = App.State.groupstable_ItemEdited;\n    var ItemSelected = App.State.groupstable_ItemSelected;\n    if (editor.column === 'name') {\n      if(ItemEdited != ItemSelected) {\n        this.getItem(ItemEdited).name = state.old;\n        this.updateItem(ItemEdited);\n        App.State.groupstable_ItemEdited = null;\n      } else {\n        var selectGroup = App.Collections.Groups.get(App.State.groupstable_ItemEdited);\n        selectGroup.set({ 'name': state.value });\n      }\n    }\n  });\n  \n  $$('treetableMytasks_Tasktable').attachEvent('onAfterEditStart', function(id) {\n    App.State.tasktable_ItemEdited = id;\n  });\n\n  $$('treetableMytasks_Tasktable').attachEvent('onAfterEditStop', function(state, editor, ignoreUpdate) {\n    var ItemEdited = App.State.tasktable_ItemEdited;\n    var ItemSelected = App.State.tasktable_ItemSelected;\n    if (editor.column === 'name') {\n      if(ItemEdited != ItemSelected) {\n        this.getItem(ItemEdited).name = state.old;\n        this.updateItem(ItemEdited);\n        App.State.tasktable_ItemEdited = null;\n      } else {\n        var selectTask = App.Collections.Tasks.get(App.State.tasktable_ItemEdited);\n        selectTask.set({ 'name': state.value });\n      }\n    }\n  });\n  \n  showInterface(false);\n  \n  webix.i18n.parseFormatDate = webix.Date.strToDate(\"%Y/%m/%d\");\n  webix.event(window, \"resize\", function() { frameBase.adjust(); });\n  Backbone.history.start({pushState: true, root: \"/\"});\n});","undoManager":{"mark":97,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":10,"column":11},"end":{"row":10,"column":12},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":12},"end":{"row":10,"column":13},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":13},"end":{"row":10,"column":14},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":14},"end":{"row":10,"column":15},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":15},"end":{"row":10,"column":16},"action":"insert","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":16},"end":{"row":10,"column":17},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":17},"end":{"row":10,"column":18},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":18},"end":{"row":10,"column":19},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":19},"end":{"row":10,"column":20},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":20},"end":{"row":10,"column":21},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":21},"end":{"row":10,"column":22},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":11,"column":11},"end":{"row":11,"column":28},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":11,"column":11},"end":{"row":11,"column":22},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":4},"end":{"row":18,"column":21},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":18,"column":4},"end":{"row":18,"column":15},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":4},"end":{"row":19,"column":21},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":19,"column":4},"end":{"row":19,"column":15},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":36},"end":{"row":10,"column":38},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":11,"column":36},"end":{"row":11,"column":38},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":36},"end":{"row":12,"column":37},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":36},"end":{"row":13,"column":37},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":30},"end":{"row":18,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":28},"end":{"row":18,"column":30},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":28},"end":{"row":18,"column":30},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":30},"end":{"row":19,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":30},"end":{"row":20,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":30},"end":{"row":20,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":30},"end":{"row":20,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":30},"end":{"row":20,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":21,"column":30},"end":{"row":21,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":21,"column":30},"end":{"row":21,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":21,"column":30},"end":{"row":21,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":21,"column":30},"end":{"row":21,"column":32},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":488,"column":14},"end":{"row":488,"column":31},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":488,"column":14},"end":{"row":488,"column":25},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":492,"column":31},"end":{"row":492,"column":48},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":492,"column":31},"end":{"row":492,"column":42},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":493,"column":33},"end":{"row":493,"column":50},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":493,"column":33},"end":{"row":493,"column":44},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":498,"column":18},"end":{"row":498,"column":35},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":498,"column":18},"end":{"row":498,"column":29},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":500,"column":63},"end":{"row":500,"column":80},"action":"remove","lines":["ingrid_Groupframe"]},{"start":{"row":500,"column":63},"end":{"row":500,"column":74},"action":"insert","lines":["groupstable"]}]}],[{"group":"doc","deltas":[{"start":{"row":469,"column":96},"end":{"row":469,"column":106},"action":"remove","lines":["frameRight"]},{"start":{"row":469,"column":96},"end":{"row":469,"column":110},"action":"insert","lines":["multiviewRight"]}]}],[{"group":"doc","deltas":[{"start":{"row":476,"column":6},"end":{"row":476,"column":16},"action":"remove","lines":["frameRight"]},{"start":{"row":476,"column":6},"end":{"row":476,"column":20},"action":"insert","lines":["multiviewRight"]}]}],[{"group":"doc","deltas":[{"start":{"row":475,"column":6},"end":{"row":475,"column":15},"action":"remove","lines":["frameLeft"]},{"start":{"row":475,"column":6},"end":{"row":475,"column":19},"action":"insert","lines":["multiviewLeft"]}]}],[{"group":"doc","deltas":[{"start":{"row":469,"column":25},"end":{"row":469,"column":34},"action":"remove","lines":["frameLeft"]},{"start":{"row":469,"column":25},"end":{"row":469,"column":38},"action":"insert","lines":["multiviewLeft"]}]}],[{"group":"doc","deltas":[{"start":{"row":469,"column":50},"end":{"row":469,"column":62},"action":"remove","lines":["frameCentral"]},{"start":{"row":469,"column":50},"end":{"row":469,"column":66},"action":"insert","lines":["multiviewCentral"]}]}],[{"group":"doc","deltas":[{"start":{"row":468,"column":20},"end":{"row":468,"column":31},"action":"remove","lines":["frameHeader"]},{"start":{"row":468,"column":20},"end":{"row":468,"column":33},"action":"insert","lines":["toolbarHeader"]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":8},"end":{"row":74,"column":19},"action":"remove","lines":["frameHeader"]},{"start":{"row":74,"column":8},"end":{"row":74,"column":21},"action":"insert","lines":["toolbarHeader"]}]}],[{"group":"doc","deltas":[{"start":{"row":73,"column":52},"end":{"row":73,"column":63},"action":"remove","lines":["frameHeader"]},{"start":{"row":73,"column":52},"end":{"row":73,"column":65},"action":"insert","lines":["toolbarHeader"]}]}],[{"group":"doc","deltas":[{"start":{"row":73,"column":19},"end":{"row":73,"column":30},"action":"remove","lines":["frameHeader"]},{"start":{"row":73,"column":19},"end":{"row":73,"column":32},"action":"insert","lines":["toolbarHeader"]}]}],[{"group":"doc","deltas":[{"start":{"row":163,"column":8},"end":{"row":163,"column":19},"action":"remove","lines":["slicegroups"]},{"start":{"row":163,"column":8},"end":{"row":163,"column":25},"action":"insert","lines":["treeSlices_Groups"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":8},"end":{"row":303,"column":19},"action":"remove","lines":["slicegroups"]},{"start":{"row":303,"column":8},"end":{"row":303,"column":25},"action":"insert","lines":["treeSlices_Groups"]}]}],[{"group":"doc","deltas":[{"start":{"row":304,"column":4},"end":{"row":304,"column":29},"action":"insert","lines":["richselectHeader_Segments"]}]}],[{"group":"doc","deltas":[{"start":{"row":304,"column":4},"end":{"row":304,"column":29},"action":"remove","lines":["richselectHeader_Segments"]}]}],[{"group":"doc","deltas":[{"start":{"row":304,"column":4},"end":{"row":304,"column":29},"action":"insert","lines":["richselectHeader_Segments"]}]}],[{"group":"doc","deltas":[{"start":{"row":304,"column":4},"end":{"row":304,"column":29},"action":"remove","lines":["richselectHeader_Segments"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":8},"end":{"row":305,"column":19},"action":"remove","lines":["mnuSegments"]},{"start":{"row":305,"column":8},"end":{"row":305,"column":33},"action":"insert","lines":["richselectHeader_Segments"]}]}],[{"group":"doc","deltas":[{"start":{"row":305,"column":48},"end":{"row":306,"column":0},"action":"insert","lines":["",""]},{"start":{"row":306,"column":0},"end":{"row":306,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":4},"end":{"row":307,"column":0},"action":"insert","lines":["",""]},{"start":{"row":307,"column":0},"end":{"row":307,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":4},"end":{"row":307,"column":107},"action":"insert","lines":["App.Frame.multiviewLeft, App.Frame.multiviewCentral,  App.Frame.frameUserList, App.Frame.multiviewRight"]}]}],[{"group":"doc","deltas":[{"start":{"row":306,"column":4},"end":{"row":307,"column":0},"action":"insert","lines":["",""]},{"start":{"row":307,"column":0},"end":{"row":307,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":4},"end":{"row":307,"column":35},"action":"insert","lines":["$$('richselectHeader_Segments')"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":35},"end":{"row":307,"column":36},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":36},"end":{"row":307,"column":37},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":37},"end":{"row":307,"column":38},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":38},"end":{"row":307,"column":39},"action":"insert","lines":["d"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":39},"end":{"row":307,"column":40},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":40},"end":{"row":307,"column":42},"action":"insert","lines":["()"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":42},"end":{"row":307,"column":44},"action":"insert","lines":["''"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":42},"end":{"row":307,"column":44},"action":"remove","lines":["''"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":42},"end":{"row":307,"column":43},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":43},"end":{"row":308,"column":0},"action":"insert","lines":["",""]},{"start":{"row":308,"column":0},"end":{"row":308,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":4},"end":{"row":308,"column":43},"action":"insert","lines":["$$('richselectHeader_Segments').hide();"]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":43},"end":{"row":309,"column":0},"action":"insert","lines":["",""]},{"start":{"row":309,"column":0},"end":{"row":309,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":4},"end":{"row":309,"column":43},"action":"insert","lines":["$$('richselectHeader_Segments').hide();"]}]}],[{"group":"doc","deltas":[{"start":{"row":307,"column":8},"end":{"row":307,"column":33},"action":"remove","lines":["richselectHeader_Segments"]},{"start":{"row":307,"column":8},"end":{"row":307,"column":21},"action":"insert","lines":["multiviewLeft"]}]}],[{"group":"doc","deltas":[{"start":{"row":308,"column":8},"end":{"row":308,"column":33},"action":"remove","lines":["richselectHeader_Segments"]},{"start":{"row":308,"column":8},"end":{"row":308,"column":21},"action":"insert","lines":["frameUserList"]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":8},"end":{"row":309,"column":33},"action":"remove","lines":["richselectHeader_Segments"]},{"start":{"row":309,"column":8},"end":{"row":309,"column":22},"action":"insert","lines":["multiviewRight"]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":0},"end":{"row":310,"column":107},"action":"remove","lines":["    App.Frame.multiviewLeft, App.Frame.multiviewCentral,  App.Frame.frameUserList, App.Frame.multiviewRight"]}]}],[{"group":"doc","deltas":[{"start":{"row":310,"column":0},"end":{"row":311,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":163,"column":0},"end":{"row":163,"column":52},"action":"remove","lines":["    $$('treeSlices_Groups').load('GroupData->load');"]}]}],[{"group":"doc","deltas":[{"start":{"row":163,"column":0},"end":{"row":164,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":302,"column":0},"end":{"row":302,"column":39},"action":"remove","lines":["    $$('treeSlices_Groups').clearAll();"]}]}],[{"group":"doc","deltas":[{"start":{"row":302,"column":0},"end":{"row":303,"column":4},"action":"remove","lines":["","    "]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":4},"end":{"row":303,"column":48},"action":"remove","lines":["$$('richselectHeader_Segments').setValue(1);"]},{"start":{"row":303,"column":4},"end":{"row":303,"column":85},"action":"insert","lines":["$$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_MyProfile');"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":47},"end":{"row":303,"column":82},"action":"insert","lines":["$$('listSegments_SegmentsSelector')"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":82},"end":{"row":303,"column":83},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":82},"end":{"row":303,"column":83},"action":"remove","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":82},"end":{"row":303,"column":83},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":83},"end":{"row":303,"column":96},"action":"insert","lines":["getFirstId();"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":96},"end":{"row":303,"column":132},"action":"remove","lines":["'listitemSegmentsSelector_MyProfile'"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":95},"end":{"row":303,"column":96},"action":"remove","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":480,"column":2},"end":{"row":481,"column":0},"action":"insert","lines":["",""]},{"start":{"row":481,"column":0},"end":{"row":481,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":481,"column":2},"end":{"row":482,"column":0},"action":"insert","lines":["",""]},{"start":{"row":482,"column":0},"end":{"row":482,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":481,"column":2},"end":{"row":481,"column":95},"action":"insert","lines":["$$('listSegments_SegmentsSelector').select($$('listSegments_SegmentsSelector').getFirstId());"]}]}],[{"group":"doc","deltas":[{"start":{"row":481,"column":0},"end":{"row":481,"column":95},"action":"remove","lines":["  $$('listSegments_SegmentsSelector').select($$('listSegments_SegmentsSelector').getFirstId());"]}]}],[{"group":"doc","deltas":[{"start":{"row":481,"column":0},"end":{"row":482,"column":2},"action":"remove","lines":["","  "]}]}],[{"group":"doc","deltas":[{"start":{"row":481,"column":0},"end":{"row":482,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":47},"end":{"row":303,"column":95},"action":"remove","lines":["$$('listSegments_SegmentsSelector').getFirstId()"]},{"start":{"row":303,"column":47},"end":{"row":303,"column":81},"action":"insert","lines":["listitemSegmentsSelector_MyProfile"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":47},"end":{"row":303,"column":48},"action":"insert","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":303,"column":82},"end":{"row":303,"column":83},"action":"insert","lines":["'"]}]}],[{"group":"doc","deltas":[{"start":{"row":527,"column":23},"end":{"row":528,"column":0},"action":"insert","lines":["",""]},{"start":{"row":528,"column":0},"end":{"row":528,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":528,"column":2},"end":{"row":529,"column":0},"action":"insert","lines":["",""]},{"start":{"row":529,"column":0},"end":{"row":529,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":529,"column":2},"end":{"row":529,"column":83},"action":"insert","lines":["$$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_MyProfile');"]}]}],[{"group":"doc","deltas":[{"start":{"row":529,"column":0},"end":{"row":529,"column":83},"action":"remove","lines":["  $$('listSegments_SegmentsSelector').select('listitemSegmentsSelector_MyProfile');"]}]}],[{"group":"doc","deltas":[{"start":{"row":529,"column":0},"end":{"row":530,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":529,"column":0},"end":{"row":530,"column":0},"action":"remove","lines":["",""]}]}]]},"ace":{"folds":[],"scrolltop":292,"scrollleft":0,"selection":{"start":{"row":529,"column":0},"end":{"row":529,"column":0},"isBackwards":false},"options":{"tabSize":2,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":69,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1418990385776}